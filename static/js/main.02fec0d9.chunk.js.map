{"version":3,"sources":["assets/images/language.svg","assets/images/moon.svg","assets/images/sun.svg","assets/images/js.svg","assets/images/react.svg","assets/images/redux.svg","assets/images/html.svg","assets/images/css.svg","assets/images/sass.svg","assets/images/vk.svg","assets/images/facebook.svg","assets/images/gmail.svg","assets/images/telegram.svg","assets/images/avatar.JPG","redux/config-reducer.jsx","components/Portfolio/Portfolio.jsx","components/SummaryInfo/Intro/Intro.jsx","components/SummaryInfo/MainInfo/MainInfo.jsx","components/SummaryInfo/SummaryInfo.jsx","App.jsx","serviceWorker.js","redux/info-reducer.jsx","redux/redux-store.jsx","index.js"],"names":["module","exports","initialState","darkMode","langRU","toggleDarkMode","type","configReducer","state","action","lang","connect","config","phone","mainInfo","social","ru","setLanguage","props","toggleLang","componentRu","componentEn","className","href","map","item","key","id","url","src","photo","alt","onClick","onChange","htmlFor","style","backgroundImage","sun","moon","fullName","city","age","avatar","en","MainInfo","arrRu","arrEn","technologies","info","head","text","SummaryInfoContainer","languages","experience","Boolean","window","location","hostname","match","js","react","redux","html","css","sass","vk","fb","gmail","telegram","mainReducer","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,sC,iBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,mMCGvCC,EAAe,CACfC,UAAU,EACVC,QAAQ,GAsBCC,EAAiB,SAACF,GAAD,MAAe,CAACG,KA3BrB,mBA2B6CH,aAEvDI,EArBO,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACpD,OAAQA,EAAOH,MACX,IAViB,mBAWb,OAAO,eACAE,EADP,CAEIL,UAAWM,EAAON,WAE1B,IAda,eAgBT,OAAO,eACAK,EADP,CAEIJ,QAASK,EAAOC,OAExB,QACI,OAAOF,I,kCCgDJG,eARI,SAACH,GAAD,MAAY,CAC3BL,SAAUK,EAAMI,OAAOT,SACvBC,OAAQI,EAAMI,OAAOR,OACrBS,MAAOL,EAAMM,SAASD,MACtBE,OAAQP,EAAMM,SAASC,OACvBC,GAAIR,EAAMM,SAASE,MAGc,CAACX,iBAAgBY,YD5C3B,SAACP,GAAD,MAAW,CAACJ,KAzBlB,eAyBsCI,UC4C5CC,EA9DG,SAACO,GAEf,IAQMC,EAAa,SAACC,EAAaC,GAC7B,OAAOH,EAAMd,OAASgB,EAAcC,GAGxC,OACI,yBAAKC,UAAWJ,EAAMf,SAAW,4BAA8B,aAC3D,yBAAKmB,UAAU,uBACX,uBAAGC,KAAK,gBAAgBD,UAAU,sCAC9B,2CAEJ,uBAAGC,KAAK,gBAAgBD,UAAU,sCAC9B,4CAGR,yBAAKA,UAAWJ,EAAMf,SAAW,0BAA4B,YACzD,yBAAKmB,UAAU,oBACVH,EAAW,0EAAkB,uCAC7BD,EAAMH,OAAOS,KAAI,SAAAC,GACd,OACI,uBAAGC,IAAKD,EAAKE,GAAIJ,KAAME,EAAKG,KACxB,yBAAKC,IAAKJ,EAAKK,MAAOC,IAAKN,EAAKM,IAC3BT,UAAWJ,EAAMf,SAAW,sDAAwD,gCAKzG,yBAAKmB,UAAU,YACX,yBAAKU,QAAS,kBA/BTtB,EA+B2BQ,EAAMd,YA9BlDc,EAAMD,YAAYP,GADF,IAACA,GAgCAY,UAAWJ,EAAMf,SAAW,kBAAoB,OAAQ0B,IAAKnB,IAAMqB,IAAI,aAC5E,2BAAOE,SAAU,kBArCT9B,EAqC8Be,EAAMf,cApCxDe,EAAMb,eAAeF,GADF,IAACA,GAqC+CwB,GAAG,aAAarB,KAAK,aAC5E,2BAAOgB,UAAU,YAAYY,QAAQ,cACjC,yBAAKZ,UAAU,SACVa,MAAOjB,EAAMf,SAAW,CAACiC,gBAAgB,OAAD,OAASC,IAAT,MAAmB,CAACD,gBAAgB,OAAD,OAASE,IAAT,UAGxF,yBAAKhB,UAAU,mBACVH,EAAW,0EAAkB,sCAC9B,2BAAID,EAAML,aCFfF,eAVI,SAACH,GAAD,MAAY,CAC3BL,SAAUK,EAAMI,OAAOT,SACvBa,GAAIR,EAAMM,SAASE,GACnBuB,SAAU/B,EAAMM,SAASyB,SACzBC,KAAMhC,EAAMM,SAAS0B,KACrBC,IAAKjC,EAAMM,SAAS2B,IACpBrC,OAAQI,EAAMI,OAAOR,OACrBsC,OAAQlC,EAAMM,SAAS4B,UAGU,KAAtB/B,EAjDD,SAACO,GACX,IAAMC,EAAa,SAACC,EAAaC,GAC7B,OAAOH,EAAMd,OAASgB,EAAcC,GAGxC,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,eACVH,EAAW,oCACR,4BAAI,0BAAMG,UAAWJ,EAAMf,SAAW,gBAAkB,OAApD,QAAJ,IAA4Ee,EAAMF,GAAGuB,SAAW,SAC/F,oCACD,4BAAI,0BAAMjB,UAAWJ,EAAMf,SAAW,gBAAkB,OAApD,QAAuEe,EAAMyB,GAAGJ,SAAW,WAGvG,yBAAKjB,UAAU,eACX,6BACKH,EAAW,oCACR,kEACA,2BAAID,EAAMF,GAAGwB,KAAb,MACC,oCACD,sCACA,2BAAItB,EAAMyB,GAAGH,KAAb,QAGR,6BACKrB,EAAW,oCACR,+EACC,oCACD,uCAEJ,2BAAID,EAAMuB,IAAV,OAIR,yBAAKnB,UAAWJ,EAAMf,SAAW,sBAAwB,SAAUgC,MAAO,CAACC,gBAAgB,OAAD,OAASlB,EAAMwB,OAAf,YCGvFE,EAtCE,SAAC1B,GACd,IAIiB2B,EAAOC,EAJJ1B,EAAaC,EAmBjC,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,oBArBHF,EAsBI,gGAtBSC,EAsBgB,8CArBtCH,EAAMd,OAASgB,EAAcC,GAsB5B,yBAAKC,UAAW,gBACZ,0BAAMA,UAAWJ,EAAMf,SAAW,wBAA0B,WAA5D,KACCe,EAAM6B,aAAavB,KAAI,SAAAC,GAAI,OAAI,yBAAKC,IAAKD,EAAKE,GAAIE,IAAKJ,EAAKK,MAAOC,IAAKN,EAAKM,IACzCT,UAAWJ,EAAMf,SAAW,8BAAgC,kBACjG,0BAAMmB,UAAWJ,EAAMf,SAAW,wBAA0B,WAA5D,KAJJ,OAnBK0C,EA2BA3B,EAAMF,GAAGgC,KA3BFF,EA2BQ5B,EAAMyB,GAAGK,KA1B9B9B,EAAMd,OAASyC,EAAMrB,KAAI,SAAAC,GACxB,OAAO,yBAAKC,IAAKD,EAAKE,GAAIL,UAAU,mBAChC,4BAAKG,EAAKwB,MACV,2BAAIxB,EAAKyB,UAGjBJ,EAAMtB,KAAI,SAAAC,GACN,OAAO,yBAAKC,IAAKD,EAAKE,GAAIL,UAAU,mBAChC,4BAAKG,EAAKwB,MACV,2BAAIxB,EAAKyB,WAkBjB,oCAAe,0BAAM5B,UAAU,UAAhB,OCNZ6B,EAFcxC,aAZV,SAACH,GAAD,MAAY,CAC3BiC,IAAKjC,EAAMM,SAAS2B,IACpB5B,MAAOL,EAAMM,SAASD,MACtBkC,aAAcvC,EAAMM,SAASiC,aAC7BK,UAAW5C,EAAMM,SAASsC,UAC1BC,WAAY7C,EAAMM,SAASuC,WAC3BrC,GAAIR,EAAMM,SAASE,GACnB2B,GAAInC,EAAMM,SAAS6B,GACnBvC,OAAQI,EAAMI,OAAOR,OACrBD,SAAUK,EAAMI,OAAOT,YAGwB,KAAtBQ,EAtBT,SAACO,GACjB,OACI,yBAAKI,UAAU,WACX,kBAAC,EAAD,CAAON,GAAIE,EAAMF,GAAI2B,GAAIzB,EAAMyB,KAC/B,kBAAC,EAAD,CAAUxC,SAAUe,EAAMf,SAAUC,OAAQc,EAAMd,OAAQY,GAAIE,EAAMF,GAAI2B,GAAIzB,EAAMyB,GAAII,aAAc7B,EAAM6B,aAC1GK,UAAWlC,EAAMkC,UAAWC,WAAYnC,EAAMmC,iBCO3C1C,eAJI,SAACH,GAAD,MAAY,CAC3BL,SAAUK,EAAMI,OAAOT,YAGU,CAACE,kBAAvBM,EAXH,SAACO,GAAD,OACR,yBAAKI,UAAWJ,EAAMf,SAAW,sBAAwB,UACrD,kBAAC,EAAD,MACA,kBAAC,EAAD,UCEYmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6LCLFxD,EAAe,CACfuC,IAAK,KACL5B,MAAO,sBACP6B,O,OAAQA,EACRK,aAAc,CACV,CAACjB,MAAO6B,IAAI5B,IAAK,KAAMJ,GAAI,GAC3B,CAACG,MAAO8B,IAAO7B,IAAK,QAASJ,GAAI,GACjC,CAACG,MAAO+B,IAAO9B,IAAK,QAASJ,GAAI,GACjC,CAACG,MAAOgC,IAAM/B,IAAK,OAAQJ,GAAI,GAC/B,CAACG,MAAOiC,IAAKhC,IAAK,MAAOJ,GAAI,GAC7B,CAACG,MAAOkC,IAAMjC,IAAK,OAAQJ,GAAI,IAEnCZ,OAAQ,CACJ,CAACa,IAAK,0BAA2BE,MAAOmC,IAAIlC,IAAK,KAAMJ,GAAI,GAC3D,CAACC,IAAK,0DAA2DE,MAAOoC,IAAInC,IAAK,WAAYJ,GAAI,GACjG,CAACC,IAAK,uCAAwCE,MAAOqC,IAAOpC,IAAK,QAASJ,GAAI,GAC9E,CAACC,IAAK,0BAA2BE,MAAOsC,IAAUrC,IAAK,WAAYJ,GAAI,IAE3EX,GAAI,CACAuB,SAAU,kFACVC,KAAM,iCACNQ,KAAM,CACF,CAACC,KAAM,qCAAeC,KAAM,6jDAGoDvB,GAAI,GACpF,CAACsB,KAAM,wEAAoBC,KAAM,sZAAuFvB,GAAI,GAC5H,CAACsB,KAAM,oCAAcC,KAAM,0EAA2BvB,GAAI,GAC1D,CAACsB,KAAM,8BAAaC,KAAM,OAAQvB,GAAI,KAG9CgB,GAAI,CACAJ,SAAU,iBACVC,KAAM,QACNQ,KAAM,CACF,CAACC,KAAM,aAAcC,KAAM,uOAG2CvB,GAAI,GAC1E,CAACsB,KAAM,aAAcC,KAAM,4EAA6EvB,GAAI,GAC5G,CAACsB,KAAM,aAAcC,KAAM,qBAAwBvB,GAAI,GACvD,CAACsB,KAAM,cAAeC,KAAM,OAAQvB,GAAI,MASrC0C,EAJK,WAAmC,IAAlC7D,EAAiC,uDAAzBN,EAAyB,iCAClD,OAAOM,GCvDL8D,EAAWC,YAAgB,CAC7BzD,SAAUuD,EACVzD,OAAQL,IAKGiE,EAFDC,YAAYH,GCF1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OACSI,SAASC,eAAe,SHwHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.02fec0d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/language.d26f51f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.6a0d2891.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.9d60fb56.svg\";","module.exports = __webpack_public_path__ + \"static/media/js.b19352fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.116d88f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux.24e1deb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/html.0ef12bba.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.dcb8ae37.svg\";","module.exports = __webpack_public_path__ + \"static/media/sass.d6e1d14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.c8663d25.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.cc2fa09a.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.901be6c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.646c8626.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.8e1d8513.JPG\";","const TOGGLE_DARK_MODE = 'TOGGLE_DARK_MODE';\r\nconst SET_LANGUAGE = 'SET_LANGUAGE';\r\n\r\nlet initialState = {\r\n    darkMode: false,\r\n    langRU: false,\r\n};\r\n\r\nconst configReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_DARK_MODE:\r\n            return {\r\n                ...state,\r\n                darkMode: !action.darkMode,\r\n            };\r\n        case SET_LANGUAGE:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                langRU: !action.lang,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLanguage = (lang) => ({type: SET_LANGUAGE, lang});\r\nexport const toggleDarkMode = (darkMode) => ({type: TOGGLE_DARK_MODE, darkMode});\r\n\r\nexport default configReducer;\r\n\r\n","import React from \"react\";\r\nimport lang from './../../assets/images/language.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {setLanguage, toggleDarkMode} from \"../../redux/config-reducer\";\r\nimport moon from './../../assets/images/moon.svg';\r\nimport sun from './../../assets/images/sun.svg';\r\n\r\n\r\nconst Portfolio = (props) => {\r\n\r\n    const toggleDarkMode = (darkMode) => {\r\n        props.toggleDarkMode(darkMode);\r\n    };\r\n\r\n    const setLanguage = (lang) => {\r\n        props.setLanguage(lang);\r\n    };\r\n\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    return (\r\n        <div className={props.darkMode ? 'portfolio portfolio--dark' : \"portfolio\"}>\r\n            <div className='portfolio__projects'>\r\n                <a href='http://vk.com' className='portfolio__projects__item palettor'>\r\n                    <div>Palettor.</div>\r\n                </a>\r\n                <a href='http://vk.com' className='portfolio__projects__item palettor'>\r\n                    <div>Palettor.</div>\r\n                </a>\r\n            </div>\r\n            <div className={props.darkMode ? 'contacts contacts--dark' : \"contacts\"}>\r\n                <div className='contacts__social'>\r\n                    {toggleLang(<h3>Соцсети</h3>, <h3>Social</h3>)}\r\n                    {props.social.map(item => {\r\n                        return (\r\n                            <a key={item.id} href={item.url}>\r\n                                <img src={item.photo} alt={item.alt}\r\n                                     className={props.darkMode ? 'contacts__social__item contacts__social__item--dark' : \"contacts__social__item\"}/>\r\n                            </a>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className='settings'>\r\n                    <img onClick={() => setLanguage(props.langRU)}\r\n                         className={props.darkMode ? 'lang lang--dark' : \"lang\"} src={lang} alt=\"Language\"/>\r\n                    <input onChange={() => toggleDarkMode(props.darkMode)} id='dark-check' type=\"checkbox\"/>\r\n                    <label className='dark-mode' htmlFor=\"dark-check\">\r\n                        <div className='toggle'\r\n                             style={props.darkMode ? {backgroundImage: `url(${sun})`} : {backgroundImage: `url(${moon})`}}/>\r\n                    </label>\r\n                </div>\r\n                <div className='contacts__phone'>\r\n                    {toggleLang(<h3>Телефон</h3>, <h3>Phone</h3>)}\r\n                    <p>{props.phone}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    darkMode: state.config.darkMode,\r\n    langRU: state.config.langRU,\r\n    phone: state.mainInfo.phone,\r\n    social: state.mainInfo.social,\r\n    ru: state.mainInfo.ru,\r\n});\r\n\r\nexport default connect(stateToProps, {toggleDarkMode, setLanguage})(Portfolio);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Intro = (props) => {\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    return (\r\n        <div className='intro'>\r\n            <div className='intro__name'>\r\n                {toggleLang(<>\r\n                    <h1><span className={props.darkMode ? 'let let--dark' : 'let'}>let </span> {props.ru.fullName + ' = {'}</h1>\r\n                </>, <>\r\n                    <h1><span className={props.darkMode ? 'let let--dark' : 'let'}>let </span>{props.en.fullName + ' = {'}</h1>\r\n                </>)}\r\n            </div>\r\n            <div className='intro__info'>\r\n                <div>\r\n                    {toggleLang(<>\r\n                        <h3>'Город': </h3>\r\n                        <p>{props.ru.city},</p>\r\n                    </>, <>\r\n                        <h3>City: </h3>\r\n                        <p>{props.en.city},</p>\r\n                    </>)}\r\n                </div>\r\n                <div>\r\n                    {toggleLang(<>\r\n                        <h3>'Возраст': </h3>\r\n                    </>, <>\r\n                        <h3>Age: </h3>\r\n                    </>)}\r\n                    <p>{props.age},</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={props.darkMode ? 'avatar avatar--dark' : 'avatar'} style={{backgroundImage: `url(${props.avatar})`}}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    darkMode: state.config.darkMode,\r\n    ru: state.mainInfo.ru,\r\n    fullName: state.mainInfo.fullName,\r\n    city: state.mainInfo.city,\r\n    age: state.mainInfo.age,\r\n    langRU: state.config.langRU,\r\n    avatar: state.mainInfo.avatar,\r\n});\r\n\r\nexport default connect(stateToProps, null)(Intro);","import React from \"react\";\r\n\r\n\r\nconst MainInfo = (props) => {\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    const setInfo = (arrRu, arrEn) => {\r\n        return props.langRU ? arrRu.map(item => {\r\n                return <div key={item.id} className='main-info__item'>\r\n                    <h3>{item.head}</h3>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            }) :\r\n            arrEn.map(item => {\r\n                return <div key={item.id} className='main-info__item'>\r\n                    <h3>{item.head}</h3>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='main-info'>\r\n            <div className='main-info__item'>\r\n                {toggleLang(<h3>'Технологии: '</h3>, <h3>Technologies: </h3>)}\r\n                <div className={'technologies'}>\r\n                    <span className={props.darkMode ? 'bracket bracket--dark' : 'bracket'}>[</span>\r\n                    {props.technologies.map(item => <img key={item.id} src={item.photo} alt={item.alt}\r\n                                                         className={props.darkMode ? 'technology technology--dark' : 'technology'}/>)}\r\n                    <span className={props.darkMode ? 'bracket bracket--dark' : 'bracket'}>]</span>,\r\n                </div>\r\n            </div>\r\n\r\n            {setInfo(props.ru.info, props.en.info)}\r\n            <span>};</span><span className='cursor'>|</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MainInfo;","import React from \"react\";\r\nimport Intro from \"./Intro/Intro\";\r\nimport MainInfo from \"./MainInfo/MainInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst SummaryInfo = (props) => {\r\n    return (\r\n        <div className='summary'>\r\n            <Intro ru={props.ru} en={props.en} />\r\n            <MainInfo darkMode={props.darkMode} langRU={props.langRU} ru={props.ru} en={props.en} technologies={props.technologies}\r\n            languages={props.languages} experience={props.experience}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    age: state.mainInfo.age,\r\n    phone: state.mainInfo.phone,\r\n    technologies: state.mainInfo.technologies,\r\n    languages: state.mainInfo.languages,\r\n    experience: state.mainInfo.experience,\r\n    ru: state.mainInfo.ru,\r\n    en: state.mainInfo.en,\r\n    langRU: state.config.langRU,\r\n    darkMode: state.config.darkMode,\r\n});\r\n\r\nconst SummaryInfoContainer = connect(stateToProps, null)(SummaryInfo);\r\n\r\nexport default SummaryInfoContainer;","import React from 'react';\nimport './assets/styles/styles.scss';\nimport Portfolio from \"./components/Portfolio/Portfolio\";\nimport SummaryInfoContainer from \"./components/SummaryInfo/SummaryInfo\";\nimport {connect} from \"react-redux\";\nimport {toggleDarkMode} from \"./redux/config-reducer\";\n\nconst App = (props) => (\n    <div className={props.darkMode ? 'resume resume--dark' : \"resume\"}>\n        <SummaryInfoContainer/>\n        <Portfolio/>\n    </div>\n);\n\nlet stateToProps = (state) => ({\n    darkMode: state.config.darkMode,\n});\n\nexport default connect(stateToProps, {toggleDarkMode})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import js from './../assets/images/js.svg';\r\nimport react from './../assets/images/react.svg';\r\nimport redux from './../assets/images/redux.svg';\r\nimport html from './../assets/images/html.svg';\r\nimport css from './../assets/images/css.svg';\r\nimport sass from './../assets/images/sass.svg';\r\n\r\nimport vk from './../assets/images/vk.svg';\r\nimport fb from './../assets/images/facebook.svg';\r\nimport gmail from './../assets/images/gmail.svg';\r\nimport telegram from './../assets/images/telegram.svg';\r\nimport avatar from './../assets/images/avatar.JPG';\r\n\r\nlet initialState = {\r\n    age: '23',\r\n    phone: '+375 (29) 317-05-55',\r\n    avatar: avatar,\r\n    technologies: [\r\n        {photo: js, alt: 'JS', id: 1},\r\n        {photo: react, alt: 'React', id: 2},\r\n        {photo: redux, alt: 'Redux', id: 3},\r\n        {photo: html, alt: 'HTML', id: 4},\r\n        {photo: css, alt: 'CSS', id: 5},\r\n        {photo: sass, alt: 'Sass', id: 6},\r\n    ],\r\n    social: [\r\n        {url: 'https://vk.com/nkt_dnsv', photo: vk, alt: 'vk', id: 1},\r\n        {url: 'https://www.facebook.com/profile.php?id=100004291969423', photo: fb, alt: 'facebook', id: 2},\r\n        {url: 'mailto:nikita.denisov.1991@gmail.com', photo: gmail, alt: 'gmail', id: 3},\r\n        {url: 'https://t.me/NktDenisov', photo: telegram, alt: 'telegram', id: 4},\r\n    ],\r\n    ru: {\r\n        fullName: 'Никита Денисов',\r\n        city: 'Минск',\r\n        info: [\r\n            {head: '\\'О себе\\':', text: '\\'Целеустремленный и дисциплинированный. ' +\r\n            'Мотивирован для карьерного роста и совершенствования навыков программирования. ' +\r\n            'Программирование дает прекрасную возможность сделать рабочую жизнь интересной и оцененной по достоинству,' +\r\n            ' поэтому у меня достаточно мотивации, чтобы стать хорошим программистом.\\' ,', id: 1},\r\n            {head: '\\'Образование\\':', text: '\\'Магистр (БНТУ, кафедра \"Стандартизация, метрология и информационные системы\")\\' ,', id: 2},\r\n            {head: '\\'Языки\\':', text: '\\'Английский, B1-B2\\' ,', id: 3},\r\n            {head: '\\'Опыт\\':', text: 'null', id: 4},\r\n        ],\r\n    },\r\n    en: {\r\n        fullName: 'Nikita Denisov',\r\n        city: 'Minsk',\r\n        info: [\r\n            {head: 'Objective:', text: '\\'Purposeful and disciplined. ' +\r\n                    'Motivated for career growth and improving programming skills. ' +\r\n                    'Programming gives a great opportunity to make work-life interesting and valued, ' +\r\n                    'so I have enough motivation to become a good programmer.\\'', id: 1},\r\n            {head: 'Education:', text: '\\'Master (BNTU, \"Standartization, metrology and information systems\")\\' ,', id: 2},\r\n            {head: 'Languages:', text: '\\'English, B1-B2\\' ,', id: 3},\r\n            {head: 'Experience:', text: 'null', id: 4},\r\n        ],\r\n    }\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default mainReducer;\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport mainReducer from \"./info-reducer\";\r\nimport configReducer from \"./config-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    mainInfo: mainReducer,\r\n    config: configReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}