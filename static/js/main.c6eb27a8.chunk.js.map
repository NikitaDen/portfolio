{"version":3,"sources":["assets/images/language.svg","assets/images/moon.svg","assets/images/sun.svg","assets/images/js.svg","assets/images/react.svg","assets/images/redux.svg","assets/images/html.svg","assets/images/css.svg","assets/images/sass.svg","assets/images/vk.svg","assets/images/facebook.svg","assets/images/gmail.svg","assets/images/telegram.svg","assets/images/github.svg","assets/images/avatar.JPG","assets/images/tasker.svg","redux/config-reducer.jsx","components/Portfolio/Portfolio.jsx","components/SummaryInfo/Intro/Intro.jsx","components/SummaryInfo/MainInfo/MainInfo.jsx","components/SummaryInfo/SummaryInfo.jsx","App.jsx","serviceWorker.js","redux/info-reducer.jsx","redux/redux-store.jsx","index.js"],"names":["module","exports","initialState","darkMode","langRU","toggleDarkMode","type","configReducer","state","action","lang","connect","config","phone","mainInfo","social","ru","portfolio","setLanguage","props","toggleLang","componentRu","componentEn","className","map","item","key","id","href","style","img","backgroundImage","title","url","src","photo","alt","onClick","onChange","htmlFor","sun","moon","fullName","city","age","avatar","en","MainInfo","arrRu","arrEn","technologies","info","head","text","SummaryInfoContainer","languages","experience","Boolean","window","location","hostname","match","js","react","redux","html","css","sass","tasker","vk","fb","gmail","telegram","github","mainReducer","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6eb27a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/language.8270211e.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.d87296db.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.7eae5395.svg\";","module.exports = __webpack_public_path__ + \"static/media/js.1c147ada.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.b8fcf3ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/redux.e70bb687.svg\";","module.exports = __webpack_public_path__ + \"static/media/html.768c4807.svg\";","module.exports = __webpack_public_path__ + \"static/media/css.529c2c1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sass.c7b7f8fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.b4662c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.9303f375.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.2184017f.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.82de5d78.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.d9a7bb81.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.e5befdaf.JPG\";","module.exports = __webpack_public_path__ + \"static/media/tasker.00390a24.svg\";","const TOGGLE_DARK_MODE = 'TOGGLE_DARK_MODE';\r\nconst SET_LANGUAGE = 'SET_LANGUAGE';\r\n\r\nlet initialState = {\r\n    darkMode: true,\r\n    langRU: false,\r\n};\r\n\r\nconst configReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_DARK_MODE:\r\n            return {\r\n                ...state,\r\n                darkMode: !action.darkMode,\r\n            };\r\n        case SET_LANGUAGE:\r\n            debugger\r\n            return {\r\n                ...state,\r\n                langRU: !action.lang,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLanguage = (lang) => ({type: SET_LANGUAGE, lang});\r\nexport const toggleDarkMode = (darkMode) => ({type: TOGGLE_DARK_MODE, darkMode});\r\n\r\nexport default configReducer;\r\n\r\n","import React from \"react\";\r\nimport lang from './../../assets/images/language.svg';\r\nimport {connect} from \"react-redux\";\r\nimport {setLanguage, toggleDarkMode} from \"../../redux/config-reducer\";\r\nimport moon from './../../assets/images/moon.svg';\r\nimport sun from './../../assets/images/sun.svg';\r\n\r\n\r\nconst Portfolio = (props) => {\r\n\r\n    const toggleDarkMode = (darkMode) => {\r\n        props.toggleDarkMode(darkMode);\r\n    };\r\n\r\n    const setLanguage = (lang) => {\r\n        props.setLanguage(lang);\r\n    };\r\n\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    return (\r\n        <div className={props.darkMode ? 'portfolio portfolio--dark' : \"portfolio\"}>\r\n            <div className='portfolio__projects'>\r\n                {props.portfolio.map(item => {\r\n                    return (\r\n                        <a key={item.id} href={item.href} style={item.img ? {backgroundImage: `url('${item.img}')`} : {}} className={item.className}>\r\n                            <div>{item.title}</div>\r\n                        </a>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <div className={props.darkMode ? 'contacts contacts--dark' : \"contacts\"}>\r\n                <div className='contacts__social'>\r\n                    {toggleLang(<h3>Соцсети</h3>, <h3>Social</h3>)}\r\n                    {props.social.map(item => {\r\n                        return (\r\n                            <a key={item.id} href={item.url}>\r\n                                <img src={item.photo} alt={item.alt}\r\n                                     className={props.darkMode ? 'contacts__social__item contacts__social__item--dark' : \"contacts__social__item\"}/>\r\n                            </a>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className='settings'>\r\n                    <img onClick={() => setLanguage(props.langRU)}\r\n                         className={props.darkMode ? 'lang lang--dark' : \"lang\"} src={lang} alt=\"Language\"/>\r\n                    <input onChange={() => toggleDarkMode(props.darkMode)} id='dark-check' type=\"checkbox\"/>\r\n                    <label className='dark-mode' htmlFor=\"dark-check\">\r\n                        <div className='toggle'\r\n                             style={props.darkMode ? {backgroundImage: `url(${sun})`} : {backgroundImage: `url(${moon})`}}/>\r\n                    </label>\r\n                </div>\r\n                <div className='contacts__phone'>\r\n                    {toggleLang(<h3>Телефон</h3>, <h3>Phone</h3>)}\r\n                    <p>{props.phone}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    darkMode: state.config.darkMode,\r\n    langRU: state.config.langRU,\r\n    phone: state.mainInfo.phone,\r\n    social: state.mainInfo.social,\r\n    ru: state.mainInfo.ru,\r\n    portfolio: state.mainInfo.portfolio,\r\n});\r\n\r\nexport default connect(stateToProps, {toggleDarkMode, setLanguage})(Portfolio);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Intro = (props) => {\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    return (\r\n        <div className='intro'>\r\n            <div className='intro__name'>\r\n                {toggleLang(<>\r\n                    <h1><span className={props.darkMode ? 'let let--dark' : 'let'}>let </span> {props.ru.fullName + ' = {'}</h1>\r\n                </>, <>\r\n                    <h1><span className={props.darkMode ? 'let let--dark' : 'let'}>let </span>{props.en.fullName + ' = {'}</h1>\r\n                </>)}\r\n            </div>\r\n            <div className='intro__info'>\r\n                <div>\r\n                    {toggleLang(<>\r\n                        <h3>'Город': </h3>\r\n                        <p>{props.ru.city},</p>\r\n                    </>, <>\r\n                        <h3>City: </h3>\r\n                        <p>{props.en.city},</p>\r\n                    </>)}\r\n                </div>\r\n                <div>\r\n                    {toggleLang(<>\r\n                        <h3>'Возраст': </h3>\r\n                    </>, <>\r\n                        <h3>Age: </h3>\r\n                    </>)}\r\n                    <p>{props.age},</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={props.darkMode ? 'avatar avatar--dark' : 'avatar'} style={{backgroundImage: `url(${props.avatar})`}}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    darkMode: state.config.darkMode,\r\n    ru: state.mainInfo.ru,\r\n    fullName: state.mainInfo.fullName,\r\n    city: state.mainInfo.city,\r\n    age: state.mainInfo.age,\r\n    langRU: state.config.langRU,\r\n    avatar: state.mainInfo.avatar,\r\n});\r\n\r\nexport default connect(stateToProps, null)(Intro);","import React from \"react\";\r\n\r\n\r\nconst MainInfo = (props) => {\r\n    const toggleLang = (componentRu, componentEn) => {\r\n        return props.langRU ? componentRu : componentEn;\r\n    };\r\n\r\n    const setInfo = (arrRu, arrEn) => {\r\n        return props.langRU ? arrRu.map(item => {\r\n                return <div key={item.id} className='main-info__item'>\r\n                    <h3>{item.head}</h3>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            }) :\r\n            arrEn.map(item => {\r\n                return <div key={item.id} className='main-info__item'>\r\n                    <h3>{item.head}</h3>\r\n                    <p>{item.text}</p>\r\n                </div>\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='main-info'>\r\n            <div className='main-info__item'>\r\n                {toggleLang(<h3>'Технологии': </h3>, <h3>Technologies: </h3>)}\r\n                <div className={'technologies'}>\r\n                    <span className={props.darkMode ? 'bracket bracket--dark' : 'bracket'}>[</span>\r\n                    {props.technologies.map(item => {\r\n                        return (\r\n                            <>\r\n                                <span className='technology-text'>{item.alt}</span>\r\n                                <img key={item.id} src={item.photo} alt={item.alt}\r\n                                     className={props.darkMode ? 'technology technology--dark' : 'technology'}/>\r\n                            </>)\r\n                    })}\r\n                    <span className={props.darkMode ? 'bracket bracket--dark' : 'bracket'}>]</span>,\r\n                </div>\r\n            </div>\r\n\r\n            {setInfo(props.ru.info, props.en.info)}\r\n            <span>};</span><span className='cursor'>|</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MainInfo;","import React from \"react\";\r\nimport Intro from \"./Intro/Intro\";\r\nimport MainInfo from \"./MainInfo/MainInfo\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst SummaryInfo = (props) => {\r\n    return (\r\n        <div className='summary'>\r\n            <Intro ru={props.ru} en={props.en} />\r\n            <MainInfo darkMode={props.darkMode} langRU={props.langRU} ru={props.ru} en={props.en} technologies={props.technologies}\r\n            languages={props.languages} experience={props.experience}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    age: state.mainInfo.age,\r\n    phone: state.mainInfo.phone,\r\n    technologies: state.mainInfo.technologies,\r\n    languages: state.mainInfo.languages,\r\n    experience: state.mainInfo.experience,\r\n    ru: state.mainInfo.ru,\r\n    en: state.mainInfo.en,\r\n    langRU: state.config.langRU,\r\n    darkMode: state.config.darkMode,\r\n});\r\n\r\nconst SummaryInfoContainer = connect(stateToProps, null)(SummaryInfo);\r\n\r\nexport default SummaryInfoContainer;","import React from 'react';\r\nimport './assets/styles/styles.scss';\r\nimport Portfolio from \"./components/Portfolio/Portfolio\";\r\nimport SummaryInfoContainer from \"./components/SummaryInfo/SummaryInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleDarkMode} from \"./redux/config-reducer\";\r\n\r\nconst App = (props) => (\r\n    <div className={props.darkMode ? 'resume resume--dark' : \"resume\"}>\r\n        <SummaryInfoContainer/>\r\n        <Portfolio/>\r\n    </div>\r\n);\r\n\r\nlet stateToProps = (state) => ({\r\n    darkMode: state.config.darkMode,\r\n});\r\n\r\nexport default connect(stateToProps, {toggleDarkMode})(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import js from './../assets/images/js.svg';\r\nimport react from './../assets/images/react.svg';\r\nimport redux from './../assets/images/redux.svg';\r\nimport html from './../assets/images/html.svg';\r\nimport css from './../assets/images/css.svg';\r\nimport sass from './../assets/images/sass.svg';\r\n\r\nimport vk from './../assets/images/vk.svg';\r\nimport fb from './../assets/images/facebook.svg';\r\nimport gmail from './../assets/images/gmail.svg';\r\nimport telegram from './../assets/images/telegram.svg';\r\nimport github from './../assets/images/github.svg';\r\nimport avatar from './../assets/images/avatar.JPG';\r\n\r\nimport tasker from './../assets/images/tasker.svg';\r\n\r\nlet initialState = {\r\n    age: '23',\r\n    phone: '+375 (29) 317-05-55',\r\n    avatar: avatar,\r\n    technologies: [\r\n        {photo: js, alt: 'JS', id: 1},\r\n        {photo: react, alt: 'React', id: 2},\r\n        {photo: redux, alt: 'Redux', id: 3},\r\n        {photo: html, alt: 'HTML', id: 4},\r\n        {photo: css, alt: 'CSS', id: 5},\r\n        {photo: sass, alt: 'Sass', id: 6},\r\n    ],\r\n    portfolio: [\r\n        {href: 'https://nikitaden.github.io/palettor/', title: 'Pickolor.', className: 'portfolio__projects__item palettor', img: '', id: 1},\r\n        {href: 'https://nikitaden.github.io/tasker/', title: 'Tasker.', className: 'portfolio__projects__item tasker', img: tasker, id: 2},\r\n    ],\r\n    social: [\r\n        {url: 'https://vk.com/nkt_dnsv', photo: vk, alt: 'vk', id: 1},\r\n        {url: 'https://www.facebook.com/profile.php?id=100004291969423', photo: fb, alt: 'facebook', id: 2},\r\n        {url: 'mailto:nikita.denisov.1991@gmail.com', photo: gmail, alt: 'gmail', id: 3},\r\n        {url: 'https://t.me/NktDenisov', photo: telegram, alt: 'telegram', id: 4},\r\n        {url: 'https://github.com/NikitaDen', photo: github, alt: 'github', id: 5},\r\n    ],\r\n    ru: {\r\n        fullName: 'Никита Денисов',\r\n        city: '\\'Минск\\'',\r\n        info: [\r\n            {head: '\\'О себе\\':', text: '\\'Целеустремленный и дисциплинированный. ' +\r\n            'Мотивирован для карьерного роста и совершенствования навыков программирования. ' +\r\n            'Программирование дает прекрасную возможность сделать рабочую жизнь интересной и оцененной по достоинству,' +\r\n            ' поэтому у меня достаточно мотивации, чтобы стать хорошим программистом.\\' ,', id: 1},\r\n            {head: '\\'Образование\\':', text: '\\'Магистр (БНТУ, кафедра \"Стандартизация, метрология и информационные системы\")\\' ,', id: 2},\r\n            {head: '\\'Языки\\':', text: '\\'Английский, B1-B2\\' ,', id: 3},\r\n            {head: '\\'Опыт\\':', text: '\\'3 месяца\\'', id: 4},\r\n        ],\r\n    },\r\n    en: {\r\n        fullName: 'Nikita Denisov',\r\n        city: '\\'Minsk\\'',\r\n        info: [\r\n            {head: 'Objective:', text: '\\'Purposeful and disciplined. ' +\r\n                    'Motivated for career growth and improving programming skills. ' +\r\n                    'Programming gives a great opportunity to make work-life interesting and valued, ' +\r\n                    'so I have enough motivation to become a good programmer.\\'', id: 1},\r\n            {head: 'Education:', text: '\\'Master (BNTU, \"Standartization, metrology and information systems\")\\' ,', id: 2},\r\n            {head: 'Languages:', text: '\\'English, B1-B2\\' ,', id: 3},\r\n            {head: 'Experience:', text: '\\'3 month\\'', id: 4},\r\n        ],\r\n    }\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default mainReducer;\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport mainReducer from \"./info-reducer\";\r\nimport configReducer from \"./config-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    mainInfo: mainReducer,\r\n    config: configReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}